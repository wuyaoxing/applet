<style lang="less">
@import './less/weui.less';
@import './less/index.less';

page {
  width: 100%;
  min-height: 100%;
  background-color: #f8f8f8;
  font-family: -apple-system-font, 'Helvetica Neue', Helvetica,
    'Microsoft YaHei', sans-serif;
}

.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  padding: 200rpx 0;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { loginUrl } from './config'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index/index',
      'pages/test/test',
      'pages/result/result'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#f8f8f8',
      navigationBarTitleText: 'applet',
      navigationBarTextStyle: 'black'
    },
    tabBar: {
      selectedColor: '#27b6ba',
      list: [
        {
          pagePath: 'pages/index/index',
          iconPath: 'images/search.png',
          selectedIconPath: 'images/search-actived.png',
          text: '搜索'
        },
        {
          pagePath: 'pages/test/test',
          iconPath: 'images/test.png',
          selectedIconPath: 'images/test-actived.png',
          text: '测试'
        }
      ]
    },
    networkTimeout: {
      request: 10000,
      downloadFile: 10000
    }
  }

  globalData = {
    userInfo: null,
    sessionid: '',
    token: ''
  }

  constructor() {
    super()
    this.use('promisify')
    this.use('requestfix')
    this.intercept('request', {
      // 发出请求时的回调函数
      config(p) {
        p.timestamp = +new Date()
        console.log('config request: ', p)
        return p
      },
      success(response) {
        console.log('request success: ', response)
        if (response.statusCode === 200) {
          return response
        }
        if (response.statusCode === 400) {
          wepy.showModal({
            title: '出错了',
            content: '请重试',
            showCancel: false
          })
          wepy.clearStorageSync()
        }
        if (response.statusCode === 500) {
          wepy.showModal({
            title: response.data.error,
            content: '请重试',
            showCancel: false
          })
          wepy.clearStorageSync()
        }
      },
      fail(p) {
        wepy.showModal({
          title: '出错了',
          content: '请重试',
          showCancel: false
        })
        console.log('request fail: ', p)
        return p
      },
      complete(p) {
        console.log('request complete: ', p)
      }
    })
  }

  async login() {
    try {
      const { code } = await wepy.login()
      const userInfo = await wepy.getUserInfo({ withCredentials: true })
      console.log(userInfo)

      return await wepy
        .request({
          method: 'POST',
          url: loginUrl,
          data: {
            code: code
          }
        })
        .then(({ data }) => {
          this.globalData.userInfo = userInfo
          this.globalData.sessionid = data.sessionid
          this.globalData.token = data.accesskey
          this.$apply()
          try {
            wepy.setStorageSync('access_token', data.accesskey)
            wepy.setStorageSync('sessionid', data.sessionid)
            return true
          } catch (e) {
            return false
          }
        })
        .catch(res => {
          console.log('error')
          return false
        })
    } catch (err) {
      // return await this.checkSettingStatus()
    }
  }

  async checkLoginState() {
    try {
      // 微信的code 状态
      const wxLoginState = await wepy.checkSession().then(
        res => {
          return true
        },
        res => {
          return false
        }
      )

      // 服务器的状态
      const token = wepy.getStorageSync('access_token')
      const sessionid = wepy.getStorageSync('sessionid')

      if (!wxLoginState || !token || !sessionid) {
        return await this.login()
      } else {
        this.globalData.sessionid = sessionid
        this.globalData.token = token
        return true
      }
    } catch (res) {
      console.log('检查登录状态---checkLoginState')
    }
  }

  async init() {
    wepy.showLoading({
      title: '正在启动',
      icon: 'loading',
      mask: true
    })
    await this.checkLoginState()
    wepy.hideLoading()
  }
}
</script>
